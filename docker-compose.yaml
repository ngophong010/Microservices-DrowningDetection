version: "3.8"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.9.1 # Using Confluent's stable Zookeeper
    ports:
      - "2181:2181" # Expose Zookeeper port
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.9.1
    ports:
    # Exposes port 9092 for connections from your host machine (e.g., your Python services)
      - "9092:9092"
      # Exposes port 29092 for connections from other containers within the same Docker network
      - "29092:29092"
    depends_on:
      - zookeeper # Kafka needs Zookeeper to be running first
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181' # How Kafka finds Zookeeper (using service name)
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092 # Critical for connectivity
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1 # For single-node setup
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1 # Confluent specific
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1 # Confluent specific
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1 # For single-node setup
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1 # For single-node setup
    # You can add a healthcheck for Kafka if desired
    # healthcheck:
    #   test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 5

  detection:
    build: ./detection-service
    volumes:
      - ./detection-service/videos:/app/videos
    environment:
      KAFKA_BROKER: kafka:9092
    depends_on:
      - kafka

  alert:
    build: ./alert-service
    environment:
      KAFKA_BROKER: kafka:9092
      SMTP_PASSWORD: "6571292c2bf2bb5a83bfb13a0cbec30d"
      RECEIVER_EMAIL: "ngophong1019@gmail.com"
    depends_on:
      - kafka

# (Optional) Define a network if you want more control, otherwise Docker Compose uses a default one
networks:
  default:
    name: kafka-net